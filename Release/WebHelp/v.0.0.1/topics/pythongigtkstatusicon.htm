<!DOCTYPE HTML>
<html id="hs-topic-p">
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>PythonGIGtkStatusIcon</title>
<meta charset="windows-1250" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="generator" content="HelpSmith 8.0 (Build 18.1202)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  margin: 0 8px 0 8px;
}
</style>
<link type="text/css" rel="stylesheet" href="../css/topics/style.css" />
<script type="text/javascript" src="../js/jquery-3.3.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?1845a896"></script>
<script type="text/javascript" src="../js/core.min.js?392d0f49"></script>
<script type="text/javascript" src="../js/topic.min.js?392d0f49"></script>
<script type="text/javascript">
	var topicContext = 1510;
</script>
</head>
<body>
<p class="ps10"><span class="ts2">Here is an example on how to build a GtkStatusIcon using PyGI (Python GObject). The code actually implements a libpeas plugin that could be used with any GTK+ project that allows GI plugins. The tray icon could respond to left clicking by toggling the application window like many instant messengers do. On right clicks it presents a menu with the options to toggle the application window or quit the application.</span></p>
<p class="ps11"><span class="ts5">from gi.repository import GObject, Peas, PeasGtk, Gtk</span><br /><br /><span class="ts5">class TrayiconPlugin (GObject.Object, PeasActivatable):</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; __gtype_name__ = 'TrayiconPlugin'</span><br /><br /><span class="ts5">&nbsp;&nbsp;&nbsp; object = GObject.property (type=GObject.Object)</span><br /><br /><span class="ts5">&nbsp;&nbsp;&nbsp; def do_activate (self):</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; self.staticon = Gtk.StatusIcon ()</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; self.staticon.set_from_stock (Gtk.STOCK_ABOUT)</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; self.staticon.connect (&quot;activate&quot;, self.trayicon_activate)</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; self.staticon.connect (&quot;popup_menu&quot;, self.trayicon_popup)</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; self.staticon.set_visible (True)</span><br /><br /><span class="ts5">&nbsp;&nbsp;&nbsp; def trayicon_activate (self, widget, data = None):</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print &quot;toggle app window!&quot;</span><br /><br /><span class="ts5">&nbsp;&nbsp;&nbsp; def trayicon_quit (self, widget, data = None):</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print &quot;quit app!&quot;</span><br /><br /><span class="ts5">&nbsp;&nbsp;&nbsp; def trayicon_popup (self, widget, button, time, data = None):</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; self.menu = Gtk.Menu ()</span><br /><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; menuitem_toggle = Gtk.MenuItem (&quot;Show / Hide&quot;)</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; menuitem_quit = Gtk.MenuItem (&quot;Quit&quot;)</span><br /><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; menuitem_toggle.connect (&quot;activate&quot;, self.trayicon_activate)</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; menuitem_quit.connect (&quot;activate&quot;, self.trayicon_quit)</span><br /><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; self.menu.append (menuitem_toggle)</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; self.menu.append (menuitem_quit)</span><br /><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; self.menu.show_all ()</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; self.menu.popup(None, None, lambda w,x: self.staticon.position_menu(self.menu, self.staticon), self.staticon, 3, time)</span><br /><br /><span class="ts5">&nbsp;&nbsp;&nbsp; def do_deactivate (self):</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; self.staticon.set_visible (False)</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; del self.staticon</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps3"><br /></p>
<div>
  <hr class="hline0" />
</div>
<p class="ps4"><span class="ts1">Created with an evaluation copy of HelpSmith.</span><br /><span class="ts1">To remove this notice, you should </span><a href="http://www.helpsmith.com/buynow.php" target="_blank" class="hs1">purchase the full version</a><span class="ts1">&nbsp;of the product.</span></p>
</body>
</html>