<!DOCTYPE HTML>
<html id="hs-topic-p">
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>nginx</title>
<meta charset="windows-1250" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="generator" content="HelpSmith 8.0 (Build 18.1202)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  margin: 0 8px 0 8px;
}
</style>
<link type="text/css" rel="stylesheet" href="../css/topics/style.css" />
<script type="text/javascript" src="../js/jquery-3.3.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?1845a896"></script>
<script type="text/javascript" src="../js/core.min.js?392d0f49"></script>
<script type="text/javascript" src="../js/topic.min.js?392d0f49"></script>
<script type="text/javascript">
	var topicContext = 780;
</script>
</head>
<body>
<p class="ps0"><span class="ts0">Config Syntax</span></p>
<p><span class="ts2">Validate config with </span><a href="https://github.com/yandex/gixy" class="hs0">gixy</a><span class="ts2">&nbsp;(static config analyzer)</span></p>
<p class="ps7"><span class="ts3">Proxy Pass + Rewrite</span></p>
<p class="ps5"><span class="ts2">For example strip a path before proxy passing...</span></p>
<p class="ps9"><span class="ts5">location ~ &lt;expr&gt; {</span><br /><span class="ts5">&nbsp;&nbsp; rewrite /&lt;path to strip&gt;/(.*) /$1 break;</span><br /><span class="ts5">&nbsp;&nbsp; proxy_pass http://127.0.0.1:8080;</span><br /><span class="ts5">}</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps7"><span class="ts3">Proxy Pass + Host Header</span></p>
<p class="ps5"><span class="ts2">By default proxy pass doesn't pass the header. This needs to be said explicitly:</span></p>
<p class="ps9"><span class="ts5">location / {</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; proxy_pass&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; http://localhost:8000;</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; proxy_set_header Host $host;</span><br /><span class="ts5">}</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps7"><span class="ts3">Complex Conditions</span></p>
<p class="ps5"><span class="ts2">As nginx does not support complex logic in if() conditions you need to set flags in a smart way to workaround it.</span></p>
<p class="ps9"><span class="ts5"># Define a control flag</span><br /><span class="ts5">set $extra_handling = 0;</span><br /><br /><span class="ts5"># Set the control flag when needed</span><br /><span class="ts5">if ($variable1 ~* pattern) {</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; set $extra_handling = 1;</span><br /><span class="ts5">}</span><br /><br /><span class="ts5"># Unset the flag if needed</span><br /><span class="ts5">if ( $variable2 = 1 ) {</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; set $extra_handling = 0;</span><br /><span class="ts5">}</span><br /><br /><span class="ts5">if ( $extra_handling = 1 ) {</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; # Trigger intended behaviour</span><br /><span class="ts5">}</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps0"><span class="ts0">Mitigating security issues</span></p>
<p><span class="ts2">A general description on secure nginx configuration can be found here: </span><a href="https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html" class="hs0">https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html</a></p>
<p class="ps7"><span class="ts3">BEAST</span></p>
<p class="ps9"><span class="ts5">ssl_ciphers RC4:HIGH:!aNULL:!MD5;</span><br /><span class="ts5">ssl_prefer_server_ciphers on;</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps7"><span class="ts3">DH downgrade</span></p>
<p class="ps5"><span class="ts2">Create unique DH group</span></p>
<p class="ps9"><span class="ts5">openssl dhparam -out dhparams.pem 2048</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps10"><span class="ts2">Enable it in config</span></p>
<p class="ps9"><span class="ts5">ssl_dhparam {path to dhparams.pem}</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps12"><span class="ts2">And set </span><a href="nginx.htm#Sane Ciphers" class="hs0">sane ciphers</a><span class="ts2">.</span></p>
<p class="ps7"><span class="ts3">Sane Ciphers</span></p>
<p class="ps5"><span class="ts2">Suggestion from 22.5.2015 by </span><a href="https://weakdh.org/sysadmin.html" class="hs0">weakdh.org</a><span class="ts2">:</span></p>
<p class="ps9"><span class="ts5">ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';</span><br /><br /><span class="ts5">ssl_prefer_server_ciphers on;</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps0"><span class="ts0">Data Privacy</span></p>
<p class="ps5"><span class="ts2">Alternatives to avoid tracking users by IP to be more GDPR compliant:</span></p>
<p class="ps2"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 24px"></span><a href="https://www.nginx.com/blog/data-masking-user-privacy-nginscript/" class="hs0">Mask IP Addresses</a><span class="ts2">, deterministically replace IPs with same but anonymous value using JS plugin</span></p>
<p class="ps2"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 24px"></span><a href="https://stackoverflow.com/questions/6477239/anonymize-ip-logging-in-nginx" class="hs0">Match all but the last octect of $remote_addr with regex</a><span class="ts2">&nbsp;and insert variable in custom log_format</span></p>
<p class="ps2"><span class="ts8"># Note: add another/extend regex for IPv6</span><br /><span class="ts8">if ($remote_addr ~ (\d+).(\d+).(\d+).(\d+)) {</span><br /><span class="ts8">&nbsp;&nbsp; set $truncated_ip $1.$2.0.1;</span><br /><span class="ts8">}</span><br /><span class="ts8">log_format&nbsp; main&nbsp; '[$time_local] $truncated_ip &quot;$request&quot; $status $body_bytes_sent $request_time &quot;$http_referer&quot; &quot;$http_user_agent&quot;';</span><br />&nbsp;</p>
<p class="ps2"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 24px"></span><span class="ts2">Starting with nginx 1.11 </span><a href="https://stackoverflow.com/questions/6477239/anonymize-ip-logging-in-nginx" class="hs0">use &quot;map&quot; to apply regex patterns and extract the result</a></p>
<p class="ps1"><span class="ts8">map $remote_addr $truncated_ip {</span><br /><span class="ts8">&nbsp;&nbsp; ~(?P&lt;ip&gt;\d+\.\d+\.\d+)\.&nbsp;&nbsp;&nbsp; $ip.0;</span><br /><span class="ts8">&nbsp;&nbsp; ~(?P&lt;ip&gt;[^:]+:[^:]+):&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ip::;</span><br /><span class="ts8">&nbsp;&nbsp; default&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0.0.0;</span><br /><span class="ts8">}</span><br /><span class="ts8">log_format&nbsp; main&nbsp; '[$time_local] $truncated_ip &quot;$request&quot; $status $body_bytes_sent $request_time &quot;$http_referer&quot; &quot;$http_user_agent&quot;';</span><br />&nbsp;</p>
<p class="ps0"><span class="ts0">Enabling Features</span></p>
<p class="ps6"><span class="ts3">FPC with memcached</span></p>
<p class="ps5"><span class="ts2">Full Page Cache (FPC) with memcached</span></p>
<p class="ps9"><span class="ts5">if ($request_method = GET) {</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; set $memcached_key some_prefix$request_uri;</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; memcached_pass memcached;</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; error_page 404 = @nocache;</span><br /><span class="ts5">}</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps7"><span class="ts3">FastCGI caching</span></p>
<p class="ps9"><span class="ts5">set $nocache &quot;&quot;;</span><br /><span class="ts5">if ($http_cookie ~ SESS) {</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; set $nocache &quot;Y&quot;;</span><br /><span class="ts5">}</span><br /><span class="ts5">fastcgi_cache mycache;</span><br /><span class="ts5">fastcgi_cache_key $scheme$host$uri$args;</span><br /><span class="ts5">fastcgi_ignore_headers Expires;</span><br /><span class="ts5">fastcgi_cache_bypass $nocache;</span><br /><span class="ts5">fastcgi_no_cache $nocache;</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps7"><span class="ts3">OSCP Stapling</span></p>
<p class="ps5"><span class="ts2">Available starting with nginx 1.3.7</span></p>
<p class="ps11"><span class="ts5">ssl_stapling on;</span><br /><span class="ts5">ssl_stapling_verify on;</span><br /><span class="ts5">resolver 8.8.8.8 8.8.4.4 valid=300s;</span><br /><span class="ts5">resolver_timeout 5s;</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps3"><br /></p>
<div>
  <hr class="hline0" />
</div>
<p class="ps4"><span class="ts1">Created with an evaluation copy of HelpSmith.</span><br /><span class="ts1">To remove this notice, you should </span><a href="http://www.helpsmith.com/buynow.php" target="_blank" class="hs1">purchase the full version</a><span class="ts1">&nbsp;of the product.</span></p>
</body>
</html>