<!DOCTYPE HTML>
<html id="hs-topic-p">
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Glib_GRegex</title>
<meta charset="windows-1250" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="generator" content="HelpSmith 8.0 (Build 18.1202)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  margin: 0 8px 0 8px;
}
</style>
<link type="text/css" rel="stylesheet" href="../css/topics/style.css" />
<script type="text/javascript" src="../js/jquery-3.3.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?1845a896"></script>
<script type="text/javascript" src="../js/core.min.js?392d0f49"></script>
<script type="text/javascript" src="../js/topic.min.js?392d0f49"></script>
<script type="text/javascript">
	var topicContext = 910;
</script>
</head>
<body>
<p class="ps12"><span class="ts2">Glib supports PCRE based regular expressions since v2.14 with the </span><span class="ts4">GRegex</span><span class="ts2">&nbsp;class.</span></p>
<p class="ps7"><span class="ts3">Usage</span></p>
<p class="ps5"><span class="ts2">&lt;pre class=&quot;brush:c&quot;&gt;GError *err = NULL; GMatchInfo *matchInfo; GRegex *regex;</span></p>
<p class="ps5"><span class="ts2">regex = g_regex_new (&quot;text&quot;, 0, 0, &amp;err); // check for compilation errors here!</span></p>
<p class="ps5"><span class="ts2">g_regex_match (regex, &quot;Some text to match&quot;, 0, &amp;matchInfo); &lt;/pre&gt;</span></p>
<p><span class="ts2">Not how g_regex_new() gets the pattern as first parameter without any regex delimiters. As the regex is created separately it can and should be reused.</span></p>
<p class="ps7"><span class="ts3">Checking if a GRegex did match</span></p>
<p class="ps5"><span class="ts2">Above example just ran the regular expression, but did not test for matching. To simply test for a match add something like this:</span></p>
<p><span class="ts2">&lt;pre class=&quot;brush:c&quot;&gt;if (g_match_info_matches (matchInfo)) g_print (&quot;Text found!\n&quot;); &lt;/pre&gt;</span></p>
<p class="ps7"><span class="ts3">Extracting Data</span></p>
<p class="ps5"><span class="ts2">If you are interested in data matched you need to use matching groups and need to iterate over the matches in the GMatchInfo structure. Here is an example (without any error checking):</span></p>
<p class="ps5"><span class="ts2">&lt;pre class=&quot;brush:c&quot;&gt;regex = g_regex_new (&quot; mykey=(\w+) &quot;, 0, 0, &amp;err); g_regex_match (regex, content, 0, &amp;matchInfo);</span></p>
<p class="ps5"><span class="ts2">while (g_match_info_matches (matchInfo)) { gchar *result = g_match_info_fetch (matchInfo, 0);</span></p>
<p class="ps5"><span class="ts2">g_print (&quot;mykey=%s\n&quot;, result);</span></p>
<p><span class="ts2">g_match_info_next (matchInfo, &amp;err); g_free (result); } &lt;/pre&gt;</span></p>
<p class="ps7"><span class="ts3">Easy String Splitting</span></p>
<p class="ps5"><span class="ts2">Another nice feature in Glib is regex based string splitting with g_regex_split() or g_regex_split_simple():</span></p>
<p class="ps5"><span class="ts2">&lt;pre class=&quot;brush:c&quot;&gt;gchar **results = g_regex_split_simple (&quot;\s+&quot;, &quot;White space separated list&quot;, 0, 0); &lt;/pre&gt;</span></p>
<p class="ps5"><span class="ts2">Use g_regex_split for a precompiled regex or use the &quot;simple&quot; function to just pass the pattern.</span></p>
<p class="ps3"><br /></p>
<div>
  <hr class="hline0" />
</div>
<p class="ps4"><span class="ts1">Created with an evaluation copy of HelpSmith.</span><br /><span class="ts1">To remove this notice, you should </span><a href="http://www.helpsmith.com/buynow.php" target="_blank" class="hs1">purchase the full version</a><span class="ts1">&nbsp;of the product.</span></p>
</body>
</html>