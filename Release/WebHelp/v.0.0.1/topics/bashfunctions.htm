<!DOCTYPE HTML>
<html id="hs-topic-p">
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>BashFunctions</title>
<meta charset="windows-1250" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="generator" content="HelpSmith 8.0 (Build 18.1202)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  margin: 0 8px 0 8px;
}
</style>
<link type="text/css" rel="stylesheet" href="../css/topics/style.css" />
<script type="text/javascript" src="../js/jquery-3.3.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?1845a896"></script>
<script type="text/javascript" src="../js/core.min.js?392d0f49"></script>
<script type="text/javascript" src="../js/topic.min.js?392d0f49"></script>
<script type="text/javascript">
	var topicContext = 1630;
</script>
</head>
<body>
<p class="ps7"><span class="ts3">Declaring Functions</span></p>
<p class="ps5"><span class="ts2">Note: the () after the function name is optional.</span></p>
<p class="ps9"><span class="ts5">my_func() {</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; printf &quot;Hello!\n&quot;</span><br /><span class="ts5">}</span><br /><br /><span class="ts5"># Call it with</span><br /><span class="ts5">my_func</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps7"><span class="ts3">Passing Parameters</span></p>
<p class="ps5"><span class="ts2">Note: Bash doesn't support prototyping, parameter types or references.</span></p>
<p class="ps9"><span class="ts5">my_func() {</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; printf &quot;Hello %s %s\n&quot; &quot;$1&quot; &quot;$2&quot;</span><br /><span class="ts5">}</span><br /><br /><span class="ts5">my_func &quot;literal 1&quot; &quot;$var2&quot;</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps10"><span class="ts2">It is good style to &quot;shift&quot; parameters like this</span></p>
<p class="ps9"><span class="ts5">my_func() {</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; param1=$1; shift</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; param2=$1; shift</span><br /><br /><span class="ts5">&nbsp;&nbsp;&nbsp; printf &quot;Hello %s %s\n&quot; &quot;$param1&quot; &quot;$param2&quot;</span><br /><span class="ts5">}</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps7"><span class="ts3">Return Values</span></p>
<p class="ps5"><span class="ts2">You can return </span><span class="ts4">numbers only</span><span class="ts2">! Similar to program exit codes, function have return codes. Check below to see how to return data from a function.</span></p>
<p class="ps9"><span class="ts5">my_func() {</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; return 1</span><br /><span class="ts5">}</span><br /><br /><span class="ts5">my_func</span><br /><br /><span class="ts5"># Check return code</span><br /><span class="ts5">if [ $? -ne 0 ]; then</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; printf &quot;Return code: %d\n&quot; $?</span><br /><span class="ts5">fi</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps7"><span class="ts3">Returning data from a function</span></p>
<p class="ps5"><span class="ts2">The best way to return data is catching the functions STDOUT using $()</span></p>
<p class="ps11"><span class="ts5">my_func() {</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; printf &quot;Some output lines\nLine2\nLine3\n&quot;</span><br /><span class="ts5">}</span><br /><br /><span class="ts5">output=$(my_func)</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps3"><br /></p>
<div>
  <hr class="hline0" />
</div>
<p class="ps4"><span class="ts1">Created with an evaluation copy of HelpSmith.</span><br /><span class="ts1">To remove this notice, you should </span><a href="http://www.helpsmith.com/buynow.php" target="_blank" class="hs1">purchase the full version</a><span class="ts1">&nbsp;of the product.</span></p>
</body>
</html>