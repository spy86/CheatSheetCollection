<!DOCTYPE HTML>
<html id="hs-topic-p">
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Pythonsubprocess</title>
<meta charset="windows-1250" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="generator" content="HelpSmith 8.0 (Build 18.1202)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  margin: 0 8px 0 8px;
}
</style>
<link type="text/css" rel="stylesheet" href="../css/topics/style.css" />
<script type="text/javascript" src="../js/jquery-3.3.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?1845a896"></script>
<script type="text/javascript" src="../js/core.min.js?392d0f49"></script>
<script type="text/javascript" src="../js/topic.min.js?392d0f49"></script>
<script type="text/javascript">
	var topicContext = 1570;
</script>
</head>
<body>
<p class="ps7"><span class="ts3">Syntax</span></p>
<p class="ps5"><span class="ts2">Here is the syntax of important subprocess functions</span></p>
<p class="ps9"><span class="ts5">&lt;status&gt; = subprocess.call&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (&lt;command array&gt;[, &lt;options&gt;])</span><br /><span class="ts5">&lt;status&gt; = subprocess.check_call&nbsp;&nbsp; (&lt;command array&gt;[, &lt;options&gt;])</span><br /><span class="ts5">&lt;string&gt; = subprocess.check_output (&lt;command array&gt;[, &lt;options&gt;])</span><br /><span class="ts5">&lt;Popen&gt;&nbsp; = subprocess.Popen&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (&lt;command array&gt;[, &lt;options&gt;])</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps7"><span class="ts3">Basic Example</span></p>
<p class="ps9"><span class="ts5">import subprocess</span><br /><br /><span class="ts5">subprocess.call(['find', '/etc', '-name', '*.conf'])</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps10"><span class="ts2">In the example a program named 'find' is executed without a shell. To launch the command in a shell pass 'shell=True' in the list of options</span></p>
<p class="ps9"><span class="ts5">subprocess.call(['find', '/'], shell=True)</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps7"><span class="ts3">Catching STDOUT</span></p>
<p class="ps5"><span class="ts2">To collect all output of a command executed use check_output()</span></p>
<p class="ps9"><span class="ts5">output = subprocess.check_output([&quot;ls&quot;])</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps7"><span class="ts3">Redirecting STDERR</span></p>
<p class="ps5"><span class="ts2">When you only want to redirect STDERR to STDIN and catch this output too, simply add 'stderr=subprocess.STDOUT' as an option when calling check_output()</span></p>
<p class="ps9"><span class="ts5">output = subprocess.check_output([&quot;unknown_command&quot;], stderr=subprocess.STDOUT)</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps7"><span class="ts3">Complex Pipe Use Cases</span></p>
<p class="ps5"><span class="ts2">To also handle STDIN, STDOUT and STDERR you need use Popen() and Popen.communicate() to write and read from/to those pipes.</span></p>
<p class="ps9"><span class="ts5"># Launch command with all pipes connected</span><br /><span class="ts5">p = subprocess.Popen(['rm', '-i', '*'], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br /><br /><span class="ts5"># Pass exactly one 'y' and read output</span><br /><span class="ts5">(out, err) = p.communicate('y')</span><br /><br /><span class="ts5"># Check return code</span><br /><span class="ts5">if p.returncode != 0:</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; print(&quot;Error!&quot;)</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps12"><span class="ts2">Don't forget to pass a 'stdxx=subprocess.PIPE' option for each pipe you want to use</span></p>
<p class="ps7"><span class="ts3">Passing Environment Variables</span></p>
<p class="ps11"><span class="ts5">Popen([&quot;ls&quot;], env={&quot;PATH&quot;: &quot;/usr/local/bin&quot;})</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps3"><br /></p>
<div>
  <hr class="hline0" />
</div>
<p class="ps4"><span class="ts1">Created with an evaluation copy of HelpSmith.</span><br /><span class="ts1">To remove this notice, you should </span><a href="http://www.helpsmith.com/buynow.php" target="_blank" class="hs1">purchase the full version</a><span class="ts1">&nbsp;of the product.</span></p>
</body>
</html>