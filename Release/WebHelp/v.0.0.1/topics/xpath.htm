<!DOCTYPE HTML>
<html id="hs-topic-p">
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>XPath</title>
<meta charset="windows-1250" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="generator" content="HelpSmith 8.0 (Build 18.1202)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  margin: 0 8px 0 8px;
}
</style>
<link type="text/css" rel="stylesheet" href="../css/topics/style.css" />
<script type="text/javascript" src="../js/jquery-3.3.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?1845a896"></script>
<script type="text/javascript" src="../js/core.min.js?392d0f49"></script>
<script type="text/javascript" src="../js/topic.min.js?392d0f49"></script>
<script type="text/javascript">
	var topicContext = 1270;
</script>
</head>
<body>
<p class="ps0"><span class="ts0">Simple node selection</span></p>
<p class="ps5"><span class="ts2">Simple XPath expressions you can use a beginner</span></p>
<p class="ps9"><span class="ts5">//article&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # find all &lt;article&gt; tags</span><br /><span class="ts5">//article/h1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # find all &lt;h1&gt; tags directly below an &lt;article&gt;</span><br /><br /><span class="ts5">//a/@href&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # find all href attributes of &lt;a&gt; tags</span><br /><br /><span class="ts5">//span[@class='someclass']&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # find all &lt;span&gt; with class set to 'someclass'</span><br /><span class="ts5">(//span[@class='someclass'])[2]&nbsp;&nbsp; # get the 2nd &lt;span&gt; of this class only</span><br /><br /><span class="ts5">//input[@class='someclass' and @name='searchtext']&nbsp;&nbsp; # find by multiple attributes</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps0"><span class="ts0">Get node contents</span></p>
<p class="ps5"><span class="ts2">All those expressions return nodes. When you directly want to access a nodes content do use </span><span class="ts4">text()</span></p>
<p class="ps9"><span class="ts5">//article/text()</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps0"><span class="ts0">Using functions when matching</span></p>
<p class="ps5"><span class="ts2">To match attribute text use </span><span class="ts4">contains()</span></p>
<p class="ps9"><span class="ts5">//a[contains(@href, 'https')]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Get all HTTPS links</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps10"><span class="ts2">To do negative matches use </span><span class="ts4">not()</span></p>
<p class="ps9"><span class="ts5">//a[not(contains(@href, 'https')]&nbsp;&nbsp; # Get all non-HTTPS links</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps10"><span class="ts2">To count nodes use </span><span class="ts4">count()</span></p>
<p class="ps9"><span class="ts5">count(//articles/h2)</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps10"><span class="ts2">To match result length use </span><span class="ts4">string-length()</span></p>
<p class="ps9"><span class="ts5">//a[string-length(@href) &gt; 55]</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps10"><span class="ts2">For partially matches </span><span class="ts4">starts-with()</span></p>
<p class="ps9"><span class="ts5">//a[starts-with(@href, '/blog')]</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps0"><span class="ts0">Use arithmetic functions</span></p>
<p class="ps5"><span class="ts2">You can do calculations using the functions </span><span class="ts4">sum()</span><span class="ts2">, </span><span class="ts4">ceiling()</span><span class="ts2">, </span><span class="ts4">round()</span><span class="ts2">, </span><span class="ts4">min()</span><span class="ts2">, </span><span class="ts4">max()</span></p>
<p class="ps9"><span class="ts5">sum(//people/@age)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Total age of all people</span><br /><span class="ts5">ceiling((sum(//people/@weight)/count(//people)))&nbsp;&nbsp;&nbsp; # Avg weight rounded</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps10"><span class="ts2">Note: The following examples are only usable with XSLT 2.0</span></p>
<p class="ps9"><span class="ts5">min(//people/@weight)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Min weight</span><br /><span class="ts5">max(//people/@weight)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Max weight</span><br /><span class="ts5">sum(//articles/(@sold + @in_stock))</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps12"><span class="ts2">which for each article would sum first the attributes 'sold' and 'stock' and then sum up all articles together.</span></p>
<p class="ps0"><span class="ts0">Axis Navigation</span></p>
<p class="ps5"><span class="ts2">To do node relative lookups you can apply a so called 'axis' to the current node. Examples</span></p>
<p class="ps9"><span class="ts5">child::span&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Select all childs that are &lt;span&gt;s</span><br /><span class="ts5">descendant::span&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Select all &lt;span&gt;s that are descendants</span><br /><span class="ts5">ancestor::span&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Select all &lt;span&gt;s that are ancestors</span><br /><span class="ts5">ancestor-or-self::span&nbsp;&nbsp;&nbsp; # Select all &lt;span&gt;s that are ancestors and the current node if it is a &lt;span&gt;</span><br /><span class="ts5">following::span&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Select following node of type &lt;span&gt;</span><br /><span class="ts5">following-silbling::span&nbsp; # Select following node of type &lt;span&gt;</span><br /><span class="ts5">preceding::span&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Select preceding node of type &lt;span&gt; (but not ancestors, attributes and namespaces)</span><br /><span class="ts5">peceding-sibling::span&nbsp;&nbsp;&nbsp; # Select all siblings before this node</span><br /><span class="ts5">attribute::lang&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Select the @lang attribute</span><br /><br /><span class="ts5">namespace&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Other axis'es</span><br /><span class="ts5">parent</span><br /><span class="ts5">self</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps10"><span class="ts2">Instead of passing a name (like 'span' and 'lang' above) you can also pass '*' to match all nodes along the axis</span></p>
<p class="ps9"><span class="ts5">child::*</span><br /><span class="ts5">attribute::*</span><br /><span class="ts5">descendant::*</span><br /><span class="ts5">[...]</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps10"><span class="ts2">And also extract node sets and text content</span></p>
<p class="ps11"><span class="ts5">child::text()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Get all text content of all child nodes</span><br /><span class="ts5">child::node()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Get a node set of all child nodes</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps3"><br /></p>
<div>
  <hr class="hline0" />
</div>
<p class="ps4"><span class="ts1">Created with an evaluation copy of HelpSmith.</span><br /><span class="ts1">To remove this notice, you should </span><a href="http://www.helpsmith.com/buynow.php" target="_blank" class="hs1">purchase the full version</a><span class="ts1">&nbsp;of the product.</span></p>
</body>
</html>