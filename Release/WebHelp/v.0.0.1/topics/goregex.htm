<!DOCTYPE HTML>
<html id="hs-topic-p">
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>GoRegex</title>
<meta charset="windows-1250" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="generator" content="HelpSmith 8.0 (Build 18.1202)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  margin: 0 8px 0 8px;
}
</style>
<link type="text/css" rel="stylesheet" href="../css/topics/style.css" />
<script type="text/javascript" src="../js/jquery-3.3.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?1845a896"></script>
<script type="text/javascript" src="../js/core.min.js?392d0f49"></script>
<script type="text/javascript" src="../js/topic.min.js?392d0f49"></script>
<script type="text/javascript">
	var topicContext = 980;
</script>
</head>
<body>
<p class="ps10"><span class="ts2">First import the regexp package</span></p>
<p class="ps9"><span class="ts5">import regexp</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps7"><span class="ts3">Matching</span></p>
<p class="ps9"><span class="ts5">match, _ := regexp.MatchString(&quot;[a-zA-Z0-9]+&quot;, input)</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps10"><span class="ts2">match will be true if the pattern matches. To return the first match as string use</span></p>
<p class="ps9"><span class="ts5">matchstr := regexp.FindString(&quot;([a-zA-Z0-9]+)&quot;, input)</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps10"><span class="ts2">To return all matches:</span></p>
<p class="ps9"><span class="ts5">matches := regexp.FindAllString(&quot;([a-zA-Z0-9]+)&quot;, input)</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps7"><span class="ts3">Matching Methods</span></p>
<p class="ps5"><span class="ts2">There are different matching methods</span></p>
<div>
  <table class="tbl0">
    <tr class="row0">
      <td class="cell0">
        <p class="ps21"><span class="ts4">Method</span></p>
      </td>
      <td class="cell0">
        <p class="ps21"><span class="ts4">Description</span></p>
      </td>
      <td class="cell0">
        <p class="ps21"><span class="ts4">Signature</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">Match</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">Test a string for</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">func Match(patter</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">matching a byte slice</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">n string, b []byte) (</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">matched bool, err err</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">or)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">MatchString</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">Test a string for</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">func MatchString(</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">match another string</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">pattern string, s str</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">ing) (matched bool, e</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">rr error)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">Find\</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">Find first byte</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">func (re *Regexp)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindIndex\</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">slices match and</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">Find(b []byte) []byt</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindSubmatch\</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">return it</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">e</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindSubmatchIndex</span></p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">func (re *Regexp)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindIndex(b []byte)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">(loc []int)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">func (re *Regexp)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindSubmatch(b []byt</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">e) [][]byte</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">func (re *Regexp)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindSubmatchIndex(b</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">[]byte) []int</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindString\</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">Find first string</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">func (re *Regexp)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindStringIndex\</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">match and return it</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindString(s string)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindStringSubmatch\</span></p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">string</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindStringSubmatchInd</span></p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">func (re *Regexp)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">ex</span></p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindStringIndex(s st</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">ring) (loc []int)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">func (re *Regexp)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindStringSubmatch(s</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">string) []string</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">func (re *Regexp)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindStringSubmatchIn</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">dex(s string) []int</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindAll\</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">Like the</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">Like the</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindAllIndex\</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">Find/FindString</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">Find/FindString</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindAllString\</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">methods, just</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">methods, just</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindAllStringIndex\</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">returning all matches</span></p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">returning arrays of</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindAllStringSubmatch</span></p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p class="ps19"><span class="ts2">matches</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">\</span></p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">FindAllStringSubmatch</span></p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p class="ps19"><span class="ts2">Index\</span></p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
      <td class="cell0">
        <p>&nbsp;</p>
      </td>
    </tr>
  </table>
</div>
<p class="ps7"><span class="ts3">Replacing</span></p>
<p class="ps5"><span class="ts2">To replace text use ReplaceAll or ReplaceAllString</span></p>
<p class="ps9"><span class="ts5">func (re *Regexp) ReplaceAll(src, repl []byte) []byte</span><br /><span class="ts5">func (re *Regexp) ReplaceAllString(src, repl string) string</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps10"><span class="ts2">e.g.</span></p>
<p class="ps9"><span class="ts5">result := regexp.Compile(&quot;\s+&quot;).ReplaceAllString(input, &quot; &quot;)</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps12"><span class="ts2">to collapse all whitespaces</span></p>
<p class="ps7"><span class="ts3">Precompiled expressions</span></p>
<p class="ps5"><span class="ts2">Create expression with</span></p>
<p class="ps9"><span class="ts5">r, _ := regexp.Compile(&quot;[a-zA-Z0-9]+&quot;)</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps10"><span class="ts2">and use it in method form</span></p>
<p class="ps11"><span class="ts5">r.MatchString(input)</span><br /><span class="ts6">&nbsp;</span></p>
<p class="ps3"><br /></p>
<div>
  <hr class="hline0" />
</div>
<p class="ps4"><span class="ts1">Created with an evaluation copy of HelpSmith.</span><br /><span class="ts1">To remove this notice, you should </span><a href="http://www.helpsmith.com/buynow.php" target="_blank" class="hs1">purchase the full version</a><span class="ts1">&nbsp;of the product.</span></p>
</body>
</html>